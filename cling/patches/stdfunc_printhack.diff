diff --git a/src/core/clingutils/src/TClingUtils.cxx b/src/core/clingutils/src/TClingUtils.cxx
index a4baa766e8..c042fa3645 100644
--- a/src/core/clingutils/src/TClingUtils.cxx
+++ b/src/core/clingutils/src/TClingUtils.cxx
@@ -589,7 +591,8 @@ bool TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(const std::s
          // white space.
          clang::PrintingPolicy policy(fInterpreter->getCI()->getASTContext().getPrintingPolicy());
          policy.SuppressTagKeyword = true; // Never get the class or struct keyword
-         policy.SuppressScope = true;      // Force the scope to be coming from a clang::ElaboratedType.
+         policy.SuppressScope = false;
+         policy.SuppressUnwrittenScope = true;   // do not print anonymous scopes
          // The scope suppression is required for getting rid of the anonymous part of the name of a class defined in an anonymous namespace.
          // This gives us more control vs not using the clang::ElaboratedType and relying on the Policy.SuppressUnwrittenScope which would
          // strip both the anonymous and the inline namespace names (and we probably do not want the later to be suppressed).
@@ -3960,7 +3963,8 @@ void ROOT::TMetaUtils::GetNormalizedName(std::string &norm_name, const clang::Qu
    clang::ASTContext &ctxt = interpreter.getCI()->getASTContext();
    clang::PrintingPolicy policy(ctxt.getPrintingPolicy());
    policy.SuppressTagKeyword = true; // Never get the class or struct keyword
-   policy.SuppressScope = true;      // Force the scope to be coming from a clang::ElaboratedType.
+   policy.SuppressScope = false;
+   policy.SuppressUnwrittenScope = true;   // do not print anonymous scopes
    policy.AnonymousTagLocations = false; // Do not extract file name + line number for anonymous types.
    // The scope suppression is required for getting rid of the anonymous part of the name of a class defined in an anonymous namespace.
    // This gives us more control vs not using the clang::ElaboratedType and relying on the Policy.SuppressUnwrittenScope which would
