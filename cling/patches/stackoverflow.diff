diff --git a/src/core/metacling/src/TCling.cxx b/src/core/metacling/src/TCling.cxx
index e3c5de34b6..bd007cd74c 100644
--- a/src/core/metacling/src/TCling.cxx
+++ b/src/core/metacling/src/TCling.cxx
@@ -2466,6 +2466,12 @@ void TCling::InspectMembers(TMemberInspector& insp, const void* obj,
       return;
    }
 
+   if (recordDecl->isAnonymousStructOrUnion()) {
+       // anonymous struct/unions have their members added to their parent scope, so
+       // do not expect them separately (would lead to infinite recursion)
+       return;
+   }
+
    {
       // Force possible deserializations first. We need to have no pending
       // Transaction when passing control flow to the inspector below (ROOT-7779).
diff --git a/src/core/base/src/TMemberInspector.cxx b/src/core/base/src/TMemberInspector.cxx
index 8cb8f8d915..6f29f64c39 100644
--- a/src/core/base/src/TMemberInspector.cxx
+++ b/src/core/base/src/TMemberInspector.cxx
@@ -41,7 +41,7 @@ void TMemberInspector::TParentBuf::Append(const char* add)
    // Add "add" to string
    if (!add || !add[0]) return;
    Ssiz_t addlen = strlen(add);
-   fBuf.reserve(fLen + addlen);
+   fBuf.resize(fLen + addlen + (fLen ? 0 : 1));
    const char* i = add;
    while (*i) {
       fBuf[fLen++] = *i;
