diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 0e4106e..492df89 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -400,7 +400,7 @@ else()
       etc/dictpch/allLinkDefs.h
     COMMAND
       ${PYTHON_EXECUTABLE} ${CMAKE_SOURCE_DIR}/build/unix/makepchinput.py
-      ${CMAKE_SOURCE_DIR} . ${pyroot_experimental} ${__cling_pch}
+      ${CMAKE_SOURCE_DIR} . ${pyroot_experimental} ${__cling_pch} -- ${CMAKE_CXX_FLAGS_SEPARATE}
     COMMAND
       ${CMAKE_COMMAND} -E env ROOTIGNOREPREFIX=1 ${PYTHON_EXECUTABLE}
       ${CMAKE_SOURCE_DIR}/etc/dictpch/makepch.py etc/allDict.cxx.pch
diff --git a/src/build/unix/makepchinput.py b/src/build/unix/makepchinput.py
index 599c8d5..a202aa0 100755
--- a/src/build/unix/makepchinput.py
+++ b/src/build/unix/makepchinput.py
@@ -40,9 +40,18 @@ def getParams():
    """
    argv = sys.argv
    rootSrcDir, modules, expPyROOT = argv[1:4]
-   clingetpchList = argv[4:]
-
-   return rootSrcDir, modules, expPyROOT == 'ON', clingetpchList
+   posDelim = argv.index('--')
+   clingetpchList = argv[4:posDelim]
+   cxxflags = argv[posDelim + 1:]
+   cxxflagsNoW = [flag for flag in cxxflags if (flag[0:2] != '-W' and flag[0:3] != '-wd' and \
+                                                flag[0:2] != '-x' and flag[0:3] != '-ax' and \
+                                                flag[0:2] != '-O' and flag[0:5] != '-arch') \
+                                                or flag[0:4] == '-Wno']
+   if '-Wno-noexcept-type' in cxxflagsNoW:
+      cxxflagsNoW.remove('-Wno-noexcept-type')
+   #print (', '.join(cxxflagsNoW))
+
+   return rootSrcDir, modules, expPyROOT == 'ON', clingetpchList, cxxflagsNoW
 
 #-------------------------------------------------------------------------------
 def getGuardedStlInclude(headerName):
@@ -454,7 +464,7 @@ def makePCHInput():
       * etc/dictpch/allHeaders.h
       * etc/dictpch/allCppflags.txt
    """
-   rootSrcDir, modules, expPyROOT, clingetpchList = getParams()
+   rootSrcDir, modules, expPyROOT, clingetpchList, cxxflags = getParams()
 
    outdir = os.path.join("etc","dictpch")
    allHeadersFilename = os.path.join(outdir,"allHeaders.h")
@@ -498,7 +508,7 @@ def makePCHInput():
 
    copyLinkDefs(rootSrcDir, outdir)
 
-   cppFlagsContent = getCppFlags(rootSrcDir, allIncPathsList) + '\n'
+   cppFlagsContent = getCppFlags(rootSrcDir,allIncPathsList) + '\n'.join(cxxflags) + '\n'
 
    writeFiles(((allHeadersContent, allHeadersFilename),
                (allLinkdefsContent, allLinkdefsFilename),
diff --git a/src/core/dictgen/src/rootcling_impl.cxx b/src/core/dictgen/src/rootcling_impl.cxx
index d8ac350..5e1aa9b 100644
--- a/src/core/dictgen/src/rootcling_impl.cxx
+++ b/src/core/dictgen/src/rootcling_impl.cxx
@@ -33,6 +33,7 @@ const char *shortHelp =
 #include <list>
 #include <vector>
 #include <sstream>
+#include <iterator>
 #include <map>
 #include <fstream>
 #include <sys/stat.h>
@@ -4102,8 +4102,8 @@ int RootClingMain(int argc,
       }
    }
 
-   for (const std::string& Opt : gOptSink)
-      fprintf(stderr, "warning: Please remove the deprecated flag %s\n", Opt.c_str());
+   //for (const std::string& Opt : gOptSink)
+      //fprintf(stderr, "warning: Please remove the deprecated flag %s\n", Opt.c_str());
 #else
 # error "Remove this deprecated code"
 #endif
@@ -4173,6 +4173,17 @@ int RootClingMain(int argc,
       clingArgs.push_back(gOptISysRoot.ValueStr);
    }
 
+   // the "unknown options" are actually user additions to cling :P
+   for (const std::string& Opt : gOptSink)
+      clingArgs.push_back(Opt);
+
+   // extra cxx flags provided
+   for (const std::string& Opt : gCxxFlags) {
+      std::istringstream splitter(Opt);
+      std::copy(std::istream_iterator<std::string>(splitter),
+         std::istream_iterator<std::string>(), std::back_inserter(clingArgs));
+   }
+
    // Check if we have a multi dict request but no target library
    if (gOptMultiDict && gOptSharedLibFileName.empty()) {
       ROOT::TMetaUtils::Error("", "Multidict requested but no target library. Please specify one with the -s argument.\n");
