diff --git a/src/core/clingutils/src/TClingUtils.cxx b/src/core/clingutils/src/TClingUtils.cxx
index 6762f7c..6f2a5ba 100644
--- a/src/core/clingutils/src/TClingUtils.cxx
+++ b/src/core/clingutils/src/TClingUtils.cxx
@@ -3920,10 +3920,10 @@ static inline clang::QualType CanonicalIfPublic(clang::QualType usetype)
 {
    if (const clang::Type* tptr = usetype.getCanonicalType().getTypePtr()) {
       clang::Decl* decl = tptr->getAsCXXRecordDecl();
-      if (decl && !(decl->getAccess() == clang::AS_private || decl->getAccess() == clang::AS_protected))
-         usetype = usetype.getCanonicalType();
+      if (decl && (decl->getAccess() == clang::AS_private || decl->getAccess() == clang::AS_protected))
+         return usetype;
    }
-   return usetype;
+   return usetype.getCanonicalType();
 }
 
 void ROOT::TMetaUtils::GetNormalizedName(std::string &norm_name, const clang::QualType &type, const cling::Interpreter &interpreter, const TNormalizedCtxt &normCtxt)
diff --git a/src/core/foundation/src/TClassEdit.cxx b/src/core/foundation/src/TClassEdit.cxx
index 1804bf9..c46cbd6 100644
--- a/src/core/foundation/src/TClassEdit.cxx
+++ b/src/core/foundation/src/TClassEdit.cxx
@@ -462,7 +462,7 @@ void TClassEdit::TSplitType::ShortType(std::string &answ, int mode)
    }
    if (fNestedLocation) {
       // Treat X pf A<B>::X
-      fElements[fNestedLocation] = TClassEdit::ShortType(fElements[fNestedLocation].c_str(),mode);
+      if (fElements[fNestedLocation] != ")") fElements[fNestedLocation] = TClassEdit::ShortType(fElements[fNestedLocation].c_str(),mode);
       answ += fElements[fNestedLocation];
    }
    // tail is not a type name, just [2], &, * etc.
