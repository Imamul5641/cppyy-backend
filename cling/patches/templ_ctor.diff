diff --git a/src/core/meta/inc/TInterpreter.h b/src/core/meta/inc/TInterpreter.h
index 1ffe73d..7499e31 100644
--- a/src/core/meta/inc/TInterpreter.h
+++ b/src/core/meta/inc/TInterpreter.h
@@ -453,6 +453,7 @@ public:
    virtual UInt_t FuncTempInfo_TemplateNargs(FuncTempInfo_t * /* ft_info */) const = 0;
    virtual UInt_t FuncTempInfo_TemplateMinReqArgs(FuncTempInfo_t * /* ft_info */) const = 0;
    virtual Long_t FuncTempInfo_Property(FuncTempInfo_t * /* ft_info */) const = 0;
+   virtual Long_t FuncTempInfo_ExtraProperty(FuncTempInfo_t * /* ft_info */) const = 0;
    virtual void FuncTempInfo_Name(FuncTempInfo_t * /* ft_info */, TString &name) const = 0;
    virtual void FuncTempInfo_Title(FuncTempInfo_t * /* ft_info */, TString &title) const = 0;
 
diff --git a/src/core/meta/inc/TFunctionTemplate.h b/src/core/meta/inc/TFunctionTemplate.h
index 7a41283..c2c73a0 100644
--- a/src/core/meta/inc/TFunctionTemplate.h
+++ b/src/core/meta/inc/TFunctionTemplate.h
@@ -41,6 +41,7 @@ public:
 
    virtual Bool_t      IsValid();
    Long_t              Property() const;
+   Long_t              ExtraProperty() const;
 
    virtual bool        Update(FuncTempInfo_t *info);
 
diff --git a/src/core/meta/src/TFunctionTemplate.cxx b/src/core/meta/src/TFunctionTemplate.cxx
index 4d1a364..c3b1010 100644
--- a/src/core/meta/src/TFunctionTemplate.cxx
+++ b/src/core/meta/src/TFunctionTemplate.cxx
@@ -125,6 +125,14 @@ Long_t TFunctionTemplate::Property() const
    return fInfo ? gCling->FuncTempInfo_Property(fInfo) : 0;
 }
 
+////////////////////////////////////////////////////////////////////////////////
+/// Get the properties not already defined in Property.See TDictionary's EFunctionProperty.
+
+Long_t TFunctionTemplate::ExtraProperty() const
+{
+   return fInfo ? gCling->FuncTempInfo_ExtraProperty(fInfo) : 0;
+}
+
 ////////////////////////////////////////////////////////////////////////////////
 
 TDictionary::DeclId_t TFunctionTemplate::GetDeclId() const
diff --git a/src/core/metacling/src/TCling.h b/src/core/metacling/src/TCling.h
index 72ad035..c594258 100644
--- a/src/core/metacling/src/TCling.h
+++ b/src/core/metacling/src/TCling.h
@@ -460,6 +460,7 @@ public: // Public Interface
    virtual UInt_t FuncTempInfo_TemplateNargs(FuncTempInfo_t * /* ft_info */) const;
    virtual UInt_t FuncTempInfo_TemplateMinReqArgs(FuncTempInfo_t * /* ft_info */) const;
    virtual Long_t FuncTempInfo_Property(FuncTempInfo_t * /* ft_info */) const;
+   virtual Long_t FuncTempInfo_ExtraProperty(FuncTempInfo_t * /* ft_info */) const;
    virtual void FuncTempInfo_Name(FuncTempInfo_t * /* ft_info */, TString& name) const;
    virtual void FuncTempInfo_Title(FuncTempInfo_t * /* ft_info */, TString& name) const;

diff --git a/src/core/metacling/src/TCling.cxx b/src/core/metacling/src/TCling.cxx
index 5a9606d..ea911a0 100644
--- a/src/core/metacling/src/TCling.cxx
+++ b/src/core/metacling/src/TCling.cxx
@@ -8162,6 +8162,34 @@ Long_t TCling::FuncTempInfo_Property(FuncTempInfo_t *ft_info) const
    return property;
 }

+////////////////////////////////////////////////////////////////////////////////
+/// Return the property not already defined in Property
+/// See TDictionary's EFunctionProperty
+
+Long_t TCling::FuncTempInfo_ExtraProperty(FuncTempInfo_t* ft_info) const
+{
+   if (!ft_info) return 0;
+
+   long property = 0L;
+   property |= kIsCompiled;
+
+   const clang::FunctionTemplateDecl *ft = (clang::FunctionTemplateDecl*)ft_info;
+   const clang::FunctionDecl *fd = ft->getTemplatedDecl();
+
+   if (fd->isOverloadedOperator()) {
+      property |= kIsOperator;
+   }
+   else if (llvm::isa<clang::CXXConversionDecl>(fd)) {
+      property |= kIsConversion;
+   } else if (llvm::isa<clang::CXXConstructorDecl>(fd)) {
+      property |= kIsConstructor;
+   } else if (llvm::isa<clang::CXXDestructorDecl>(fd)) {
+      property |= kIsDestructor;
+   }
+
+   return property;
+}
+
 ////////////////////////////////////////////////////////////////////////////////
 /// Return the name of this function template.

