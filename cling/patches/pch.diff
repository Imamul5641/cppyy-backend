diff --git a/src/core/metacling/src/TCling.cxx b/core/metacling/src/TCling.cxx
index 5413aef378..cc94115b85 100644
--- a/src/core/metacling/src/TCling.cxx
+++ b/src/core/metacling/src/TCling.cxx
@@ -1217,12 +1217,14 @@ TCling::TCling(const char *name, const char *title, const char* const argv[])
       // same functionality).
       if (!fCxxModulesEnabled) {
          std::string pchFilename = interpInclude + "/allDict.cxx.pch";
-         if (gSystem->Getenv("ROOT_PCH")) {
-            pchFilename = gSystem->Getenv("ROOT_PCH");
+         if (gSystem->Getenv("CLING_STANDARD_PCH")) {
+            pchFilename = gSystem->Getenv("CLING_STANDARD_PCH");
          }
 
-         clingArgsStorage.push_back("-include-pch");
-         clingArgsStorage.push_back(pchFilename);
+         if (FileExists(pchFilename.c_str())) {
+            clingArgsStorage.push_back("-include-pch");
+            clingArgsStorage.push_back(pchFilename);
+         }
       }
 
       clingArgsStorage.push_back("-Wno-undefined-inline");
diff --git a/src/core/dictgen/src/rootcling_impl.cxx b/src/core/dictgen/src/rootcling_impl.cxx
index b53b7352f9..b6045d772d 100644
--- a/src/core/dictgen/src/rootcling_impl.cxx
+++ b/src/core/dictgen/src/rootcling_impl.cxx
@@ -236,6 +236,7 @@ const char *rootClingHelp =
 
 #include "llvm/Bitcode/BitstreamWriter.h"
 #include "llvm/Support/Path.h"
+#include "llvm/Support/Process.h"
 
 #include "RtypesCore.h"
 #include "TModuleGenerator.h"
@@ -4611,6 +4612,17 @@ int RootClingMain(int argc,
    ROOT::TMetaUtils::TClingLookupHelper helper(interp, normCtxt, 0, 0);
    TClassEdit::Init(&helper);
 
+   // Process externally passed arguments if present.
+   llvm::Optional<std::string> EnvOpt = llvm::sys::Process::GetEnv("EXTRA_CLING_ARGS");
+   if (EnvOpt.hasValue()) {
+      StringRef Env(*EnvOpt);
+      while (!Env.empty()) {
+         StringRef Arg;
+         std::tie(Arg, Env) = Env.split(' ');
+         clingArgs.push_back(Arg.str());
+      }
+   }
+
    // flags used only for the pragma parser:
    clingArgs.push_back("-D__CINT__");
    clingArgs.push_back("-D__MAKECINT__");
diff --git a/src/etc/dictpch/makepch.py b/src/etc/dictpch/makepch.py
index dd8faabc13..f633342f5c 100755
--- a/src/etc/dictpch/makepch.py
+++ b/src/etc/dictpch/makepch.py
@@ -41,6 +41,12 @@ def getCppFlags(cppflagsFilename):
    ifile = open(cppflagsFilename)
    lines = ifile.readlines()
    ifile.close()
+   if "linux" in sys.platform and "-std=" in os.environ.get("EXTRA_CLING_ARGS", ""):
+      keep = []
+      for line in lines:
+         if not "std=" in line:
+             keep.append(line)
+      lines = keep
    cppFlags = " ".join(map(lambda line: line[:-1], lines))
    return cppFlags
 
diff --git a/src/config/RConfigure.in b/src/config/RConfigure.in
index e8210e2f65..63b2a8dc99 100644
--- a/src/config/RConfigure.in
+++ b/src/config/RConfigure.in
@@ -59,4 +59,64 @@
 #@hastmvacpu@ R__HAS_TMVACPU /**/
 #@hastmvagpu@ R__HAS_TMVAGPU /**/
 
+#if __cplusplus > 201402L
+#ifndef R__USE_CXX17
+#define R__USE_CXX17
+#endif
+#ifdef R__USE_CXX14
+#undef R__USE_CXX14
+#endif
+#ifdef R__USE_CXX11
+#undef R__USE_CXX11
+#endif
+
+#ifndef R__HAS_STD_STRING_VIEW
+#define R__HAS_STD_STRING_VIEW
+#endif
+#ifdef R__HAS_STD_EXPERIMENTAL_STRING_VIEW
+#undef R__HAS_STD_EXPERIMENTAL_STRING_VIEW
+#endif
+#ifdef R__HAS_STOD_STRING_VIEW
+#undef R__HAS_STOD_STRING_VIEW
+#endif
+
+#ifndef R__HAS_STD_INVOKE
+#define R__HAS_STD_INVOKE
+#endif
+#ifndef R__HAS_STD_APPLY
+#define R__HAS_STD_APPLY
+#endif
+
+#ifndef R__HAS_STD_INDEX_SEQUENCE
+#define R__HAS_STD_INDEX_SEQUENCE
+#endif
+
+#elif __cplusplus > 201103L
+#ifdef R__USE_CXX17
+#undef R__USE_CXX17
+#endif
+#ifndef R__USE_CXX14
+#define R__USE_CXX14
+#endif
+#ifdef R__USE_CXX11
+#undef R__USE_CXX11
+#endif
+
+#ifndef R__HAS_STD_INDEX_SEQUENCE
+#define R__HAS_STD_INDEX_SEQUENCE
+#endif
+
+#else
+#ifdef R__USE_CXX17
+#undef R__USE_CXX17
+#endif
+#ifdef R__USE_CXX14
+#undef R__USE_CXX14
+#endif
+#ifndef R__USE_CXX11
+#define R__USE_CXX11
+#endif
+
+#endif
+
 #endif
diff --git a/src/build/unix/makepchinput.py b/src/build/unix/makepchinput.py
index 1468a87277..c823c5eef7 100755
--- a/src/build/unix/makepchinput.py
+++ b/src/build/unix/makepchinput.py
@@ -64,9 +64,10 @@ def getGuardedStlInclude(headerName):
 #-------------------------------------------------------------------------------
 def getSTLIncludes():
    """
-   Here we include the list of c++11 stl headers
+   Here we include the list of c++11/14/17 stl headers
    From http://en.cppreference.com/w/cpp/header
    valarray is removed because it causes lots of compilation at startup.
+   codecvt, ctgmath, and cstdbool are removed as they are deprecated in C++17
    """
    stlHeadersList = ("cstdlib",
                      "csignal",
@@ -134,7 +135,7 @@ def getSTLIncludes():
                      "cstdio",
                      "locale",
                      "clocale",
-                     "codecvt",
+#                    "codecvt",
                      "atomic",
                      "thread",
                      "mutex",
@@ -142,9 +143,21 @@ def getSTLIncludes():
                      "condition_variable",
                      "ciso646",
                      "ccomplex",
-                     "ctgmath",
+#                    "ctgmath",
                      "regex",
-                     "cstdbool")
+#                    "cstdbool",
+                     # add C++14 headers
+                     "shared_mutex",
+                     # add C++17 headers
+                     "any",
+                     "optional",
+                     "variant",
+                     "memory_resource",
+                     "string_view",
+                     "charconv",
+                     "execution",
+                     "filesystem",
+                     )

    allHeadersPartContent = "// STL headers\n"

